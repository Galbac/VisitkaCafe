from django.contrib import admin
from django.utils.safestring import mark_safe
from django.utils.translation import gettext_lazy as _

from .models import Product, Certificate, GalleryImage, Review


@admin.register(Product)
class ProductAdmin(admin.ModelAdmin):
    list_display = ('name', 'slug', 'weight', 'image_preview', 'certificate_tag')
    search_fields = ('name', 'description', 'composition')
    prepopulated_fields = {"slug": ("name",)}
    readonly_fields = ('image_tag', 'certificate_tag')
    list_display_links = ('name', 'image_preview')

    # –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Ñ–æ—Ä–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    fieldsets = [
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ['name', 'slug', 'description', 'technology', 'image', 'image_tag']
        }),
        ('–°–æ—Å—Ç–∞–≤ –∏ –ø–∏—Ç–∞–Ω–∏–µ', {
            'fields': ['weight', 'composition', 'calories', 'proteins', 'fats', 'carbs'],
            'description': '<p style="color: #555; font-size: 0.9em;">–£–∫–∞–∂–∏—Ç–µ —Å–æ—Å—Ç–∞–≤ –∏ –ö–ë–ñ–£ –Ω–∞ 100 –≥—Ä–∞–º–º –ø—Ä–æ–¥—É–∫—Ç–∞.</p>'
        }),
        ('–§–∞–π–ª—ã', {
            'fields': ['certificate', 'certificate_tag']
        }),
        ('–°—Å—ã–ª–∫–∏', {
            'fields': ['instagram']
        }),
    ]

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∏–Ω–∏–∞—Ç—é—Ä—ã –≤ —Å–ø–∏—Å–∫–µ
    def image_preview(self, obj):
        if obj.image:
            return mark_safe(
                f'<img src="{obj.image.url}" '
                'style="height: 40px; width: 40px; object-fit: cover; border-radius: 5px; '
                'box-shadow: 0 1px 3px rgba(0,0,0,0.2); border: 1px solid #ddd;" '
                f'title="{obj.name}">'
            )
        return mark_safe(
            '<div style="height: 40px; width: 40px; background-color: #f0f0f0; '
            'border-radius: 5px; display: flex; align-items: center; justify-content: center; '
            'border: 1px solid #ddd;" title="–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è">'
            '<span style="color: #999; font-size: 16px;">‚Äî</span></div>'
        )

    image_preview.short_description = '–§–æ—Ç–æ'

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–µ
    def image_tag(self, obj):
        if obj.image:
            return mark_safe(
                f'<a href="{obj.image.url}" target="_blank" title="–û—Ç–∫—Ä—ã—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª">'
                f'<img src="{obj.image.url}" style="max-height: 200px; max-width: 100%; '
                'border-radius: 5px; box-shadow: 0 2px 6px rgba(0,0,0,0.1); '
                'border: 1px solid #eee;">'
                '</a>'
            )
        return "–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"

    image_tag.short_description = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    def certificate_tag(self, obj):
        if obj.certificate:
            return mark_safe(
                f'<a href="{obj.certificate.url}" target="_blank" style="color: #1a73e8; '
                'text-decoration: none; font-weight: 500;">üìÑ –û—Ç–∫—Ä—ã—Ç—å</a>'
            )
        return '-'

    certificate_tag.short_description = '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç'


@admin.register(Certificate)
class CertificateAdmin(admin.ModelAdmin):
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ Certificate –≤ –∞–¥–º–∏–Ω–∫–µ Django.
    """
    list_display = ('name', 'order', 'is_active', 'admin_image_preview')
    list_filter = ('is_active',)
    search_fields = ('name', 'description')
    list_editable = ('order', 'is_active')  # –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ä—è–¥–æ–∫ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä—è–º–æ –≤ —Å–ø–∏—Å–∫–µ
    readonly_fields = ('admin_image_tag',)  # –ü–æ–ª–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞

    fieldsets = (
        (_('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'), {
            'fields': ('name', 'description', 'order', 'is_active')
        }),
        (_('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'), {
            'fields': ('image', 'admin_image_tag'),
        }),
    )

    def admin_image_preview(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∏–Ω–∏–∞—Ç—é—Ä—ã –≤ —Å–ø–∏—Å–∫–µ –æ–±—ä–µ–∫—Ç–æ–≤."""
        if obj.image:
            return mark_safe(
                f'<img src="{obj.image.url}" style="height: 40px; width: 40px; object-fit: cover; border-radius: 5px; border: 1px solid #ddd;" title="{obj.name}">'
            )
        return "-"

    admin_image_preview.short_description = _('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')

    def admin_image_tag(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
        if obj.image:
            return mark_safe(
                f'<a href="{obj.image.url}" target="_blank" title="–û—Ç–∫—Ä—ã—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª">'
                f'<img src="{obj.image.url}" style="max-height: 200px; max-width: 100%; border-radius: 5px; border: 1px solid #eee; margin-top: 10px;">'
                f'</a>'
            )
        return "-"

    admin_image_tag.short_description = _('–ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')

@admin.register(GalleryImage)
class GalleryImageAdmin(admin.ModelAdmin):
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ GalleryImage –≤ –∞–¥–º–∏–Ω–∫–µ Django.
    """
    list_display = ('admin_image_preview', 'alt_text', 'order', 'is_active', 'uploaded_at')
    list_filter = ('is_active', 'uploaded_at')
    search_fields = ('alt_text',)
    list_editable = ('order', 'is_active') # –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ä—è–¥–æ–∫ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä—è–º–æ –≤ —Å–ø–∏—Å–∫–µ
    readonly_fields = ('admin_image_tag', 'uploaded_at') # –ü–æ–ª–µ uploaded_at —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è

    fieldsets = (
        (_('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'), {
            'fields': ('image', 'admin_image_tag', 'alt_text', 'order', 'is_active')
        }),
        (_('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ'), {
            'fields': ('uploaded_at',),
            'classes': ('collapse',) # –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }),
    )

    def admin_image_preview(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∏–Ω–∏–∞—Ç—é—Ä—ã –≤ —Å–ø–∏—Å–∫–µ –æ–±—ä–µ–∫—Ç–æ–≤."""
        if obj.image:
            return mark_safe(
                f'<img src="{obj.image.url}" style="height: 50px; width: 50px; object-fit: cover; border-radius: 5px; border: 1px solid #ddd;" title="{obj.alt_text or obj.image.name}">'
            )
        return "-"
    admin_image_preview.short_description = _('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')

    def admin_image_tag(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
        if obj.image:
            return mark_safe(
                f'<a href="{obj.image.url}" target="_blank" title="–û—Ç–∫—Ä—ã—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª">'
                f'<img src="{obj.image.url}" style="max-height: 300px; max-width: 100%; border-radius: 8px; border: 1px solid #eee; margin-top: 10px;">'
                f'</a>'
            )
        return "-"
    admin_image_tag.short_description = _('–ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')


@admin.register(Review)
class ReviewAdmin(admin.ModelAdmin):
    list_display = ('name', 'created_at', 'has_text', 'has_screenshot')
    list_filter = ('created_at',)
    search_fields = ('name', 'text')
    readonly_fields = ('created_at',)

    def has_text(self, obj):
        return bool(obj.text)
    has_text.boolean = True
    has_text.short_description = "–ï—Å—Ç—å —Ç–µ–∫—Å—Ç"

    def has_screenshot(self, obj):
        return bool(obj.screenshot)
    has_screenshot.boolean = True
    has_screenshot.short_description = "–ï—Å—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç"